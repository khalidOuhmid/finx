version: '3.8'

services:
  cassandra:
    image: cassandra:5.0
    ports:
      - "9042:9042"
    volumes:
      - ./init.cql:/docker-entrypoint-initdb.d/init.cql  # Chemin relatif corrigé
    environment:
      CASSANDRA_CLUSTER_NAME: dev-cluster
      JVM_OPTS: "-Xmx1024M -Xms512M"  # Format standard pour la JVM
    healthcheck:
      test: ["CMD-SHELL", "cqlsh -e 'DESCRIBE KEYSPACES'"]
      interval: 15s  # Intervalle réduit pour détection plus rapide
      timeout: 20s
      retries: 10

  spark-master:  # Nom du service corrigé pour correspondre au depends_on
    image: bitnami/spark:3.5.1
    ports:
      - "4040:4040"
      - "7077:7077"
      - "8080:8080"  # UI Spark
    environment:
      SPARK_MODE: master
      SPARK_MASTER_HOST: spark-master  # Définition explicite
      SPARK_LOCAL_IP: spark-master  # Communication interne
    networks:
      - stock-net

  spring-app:
    build:
      context: ../backend/docker/compose
      dockerfile: Dockerfile
    ports:
      - "8081:8080"
    volumes:
      - ./src:/app/src
      - ./target:/app/target
    environment:
      SPRING_PROFILES_ACTIVE: docker
      SPRING_DATA_CASSANDRA_CONTACTPOINTS: cassandra  # Connexion à Cassandra
      SPRING_DATA_CASSANDRA_LOCAL_DATACENTER: datacenter1
    depends_on:
      cassandra:
        condition: service_healthy  # Attendre que Cassandra soit prêt
      spark-master:
        condition: service_started

networks:
  stock-net:  # Réseau personnalisé pour l'isolation
    driver: bridge
    ipam:
      config:
        - subnet: 172.20.0.0/24

volumes:
  cassandra-data:  # Volume persistant pour Cassandra
